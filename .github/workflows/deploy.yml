name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build-and-deploy:
    needs: security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            dist
            node_modules/.cache
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json', '**/src/**') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g html-minifier-terser svgo
          if [ $? -ne 0 ]; then
            echo "::error::Failed to install dependencies"
            exit 1
          fi

      - name: Validate Environment
        run: |
          if [ -z "${{ secrets.ESHANIZED_GH_TOKEN }}" ]; then
            echo "::error::ESHANIZED_GH_TOKEN is not set"
            exit 1
          fi

      - name: Build
        run: |
          npm run build
          if [ $? -ne 0 ]; then
            echo "::error::Build failed"
            exit 1
          fi
        env:
          DEPLOY_TARGET: github
          NODE_ENV: production

      - name: Optimize Assets
        run: |
          html-minifier-terser --input-dir dist --output-dir dist --file-ext html --collapse-whitespace --remove-comments
          svgo -f dist -r

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        with:
          github_token: ${{ secrets.ESHANIZED_GH_TOKEN }}
          publish_dir: ./dist
          cname: eshanized.is-a.dev
          user_name: 'eshanized'
          user_email: 'm.eshanized@gmail.com'
          commit_message: 'Deploy to GitHub Pages'
          full_commit_message: 'Deploy to GitHub Pages from @ ${{ github.sha }}'

      - name: Report Status
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const { conclusion } = context;
            const message = conclusion === 'success'
              ? '✅ Deployment successful'
              : '❌ Deployment failed';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });